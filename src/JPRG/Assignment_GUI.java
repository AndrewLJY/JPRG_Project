/*
 * Class: DIT/FT/1B/03
 * Admission Number: p2014962
 * Name: Loke Jing Yang
 */
package JPRG;

/**
 *
 * @author user
 */
public class Assignment_GUI extends javax.swing.JFrame {

    EventManagement em = new EventManagement();

    /**
     * Creates new form Assignment_GUI
     */
    public Assignment_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userrole = new javax.swing.ButtonGroup();
        eventtype = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        UserRolePanel = new javax.swing.JPanel();
        admin = new javax.swing.JRadioButton();
        user = new javax.swing.JRadioButton();
        Add_DeleteEventsPanel = new javax.swing.JPanel();
        eventname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        eventorganiser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        eventdatetime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        eventfees = new javax.swing.JTextField();
        addeventbtn = new javax.swing.JButton();
        deleteeventbtn = new javax.swing.JButton();
        publicbtn = new javax.swing.JRadioButton();
        privatebtn = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        passcode = new javax.swing.JTextField();
        SearchEventNamePanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        searcheventname = new javax.swing.JTextField();
        searchnamebtn = new javax.swing.JButton();
        registereventbtn = new javax.swing.JButton();
        SearchEventFeesPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        searcheventfees = new javax.swing.JTextField();
        searchfeesbtn = new javax.swing.JButton();
        DisplayPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        displayevents = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 204));
        jLabel1.setText("Event Management");

        UserRolePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("User Role"));

        userrole.add(admin);
        admin.setSelected(true);
        admin.setText("Administrator");
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userrole(evt);
            }
        });

        userrole.add(user);
        user.setText("Normal User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userrole(evt);
            }
        });

        javax.swing.GroupLayout UserRolePanelLayout = new javax.swing.GroupLayout(UserRolePanel);
        UserRolePanel.setLayout(UserRolePanelLayout);
        UserRolePanelLayout.setHorizontalGroup(
            UserRolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserRolePanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(admin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(user)
                .addGap(82, 82, 82))
        );
        UserRolePanelLayout.setVerticalGroup(
            UserRolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserRolePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserRolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(user))
                .addGap(14, 14, 14))
        );

        Add_DeleteEventsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add/Delete Events"));

        jLabel2.setText("Event Name: ");

        jLabel3.setText("Event Organiser:");

        jLabel4.setText("Date / Time:");

        jLabel5.setText("Event Fees: ");

        addeventbtn.setBackground(new java.awt.Color(153, 255, 153));
        addeventbtn.setText("Add Event");
        addeventbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addeventbtnActionPerformed(evt);
            }
        });

        deleteeventbtn.setBackground(new java.awt.Color(255, 102, 102));
        deleteeventbtn.setText("Delete Event");
        deleteeventbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteeventbtnActionPerformed(evt);
            }
        });

        eventtype.add(publicbtn);
        publicbtn.setSelected(true);
        publicbtn.setText("Public");
        publicbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventtype(evt);
            }
        });

        eventtype.add(privatebtn);
        privatebtn.setText("Private");
        privatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventtype(evt);
            }
        });

        jLabel8.setText("Passcode:");

        passcode.setEditable(false);

        javax.swing.GroupLayout Add_DeleteEventsPanelLayout = new javax.swing.GroupLayout(Add_DeleteEventsPanel);
        Add_DeleteEventsPanel.setLayout(Add_DeleteEventsPanelLayout);
        Add_DeleteEventsPanelLayout.setHorizontalGroup(
            Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_DeleteEventsPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                                    .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addGap(14, 14, 14)))
                            .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(eventorganiser, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                                .addComponent(eventname)
                                .addComponent(eventdatetime)
                                .addComponent(eventfees)))
                        .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                            .addGap(88, 88, 88)
                            .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                                    .addComponent(addeventbtn)
                                    .addGap(70, 70, 70)
                                    .addComponent(deleteeventbtn))
                                .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                                    .addComponent(publicbtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                                    .addComponent(privatebtn)
                                    .addGap(58, 58, 58)))))
                    .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(passcode, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        Add_DeleteEventsPanelLayout.setVerticalGroup(
            Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_DeleteEventsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(eventorganiser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(eventdatetime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(eventfees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publicbtn)
                    .addComponent(privatebtn))
                .addGap(18, 18, 18)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(passcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(Add_DeleteEventsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addeventbtn)
                    .addComponent(deleteeventbtn))
                .addContainerGap())
        );

        SearchEventNamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Event By Name"));

        jLabel6.setText("Search Event Name: ");

        searchnamebtn.setText("Search");
        searchnamebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchnamebtnActionPerformed(evt);
            }
        });

        registereventbtn.setBackground(new java.awt.Color(153, 255, 153));
        registereventbtn.setText("Register Event");
        registereventbtn.setEnabled(false);
        registereventbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registereventbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchEventNamePanelLayout = new javax.swing.GroupLayout(SearchEventNamePanel);
        SearchEventNamePanel.setLayout(SearchEventNamePanelLayout);
        SearchEventNamePanelLayout.setHorizontalGroup(
            SearchEventNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchEventNamePanelLayout.createSequentialGroup()
                .addGroup(SearchEventNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchEventNamePanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(SearchEventNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(searcheventname, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SearchEventNamePanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(SearchEventNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchnamebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(registereventbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        SearchEventNamePanelLayout.setVerticalGroup(
            SearchEventNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchEventNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searcheventname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(searchnamebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registereventbtn)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        SearchEventFeesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Event By Fees ($)"));

        jLabel7.setText("Search Event Fees ($): ");

        searchfeesbtn.setText("Search");
        searchfeesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchfeesbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchEventFeesPanelLayout = new javax.swing.GroupLayout(SearchEventFeesPanel);
        SearchEventFeesPanel.setLayout(SearchEventFeesPanelLayout);
        SearchEventFeesPanelLayout.setHorizontalGroup(
            SearchEventFeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchEventFeesPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(SearchEventFeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(searcheventfees, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchEventFeesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchfeesbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        SearchEventFeesPanelLayout.setVerticalGroup(
            SearchEventFeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchEventFeesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searcheventfees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(searchfeesbtn)
                .addGap(14, 14, 14))
        );

        DisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Display"));

        display.setEditable(false);
        display.setColumns(20);
        display.setRows(5);
        jScrollPane1.setViewportView(display);

        javax.swing.GroupLayout DisplayPanelLayout = new javax.swing.GroupLayout(DisplayPanel);
        DisplayPanel.setLayout(DisplayPanelLayout);
        DisplayPanelLayout.setHorizontalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        DisplayPanelLayout.setVerticalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 68, Short.MAX_VALUE)
        );

        displayevents.setBackground(new java.awt.Color(153, 153, 255));
        displayevents.setText("Display Events");
        displayevents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayeventsActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(255, 153, 153));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(153, 153, 255));
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add_DeleteEventsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UserRolePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchEventFeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchEventNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(displayevents, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UserRolePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(Add_DeleteEventsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchEventNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(SearchEventFeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(displayevents)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(reset))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayeventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayeventsActionPerformed
        // Will display all the current events available
        display.setText(em.displayEvent(em.createEvent()));
    }//GEN-LAST:event_displayeventsActionPerformed

    private void addeventbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addeventbtnActionPerformed
        // Initialization of neccessary variables
        String eventtypesel = null;
        String eventpasscode = null;

        // Checks of any of the fields are empty
        if (eventname.getText().equals("") || eventdatetime.getText().equals("") || eventfees.getText().equals("") || eventorganiser.getText().equals("")) {
            display.setText("Please fill in all the fields");
        } else {
            // It will go here if all fields are filled in

            // Checks if the admin chose the event to be public or private when adding an event
            if (publicbtn.isSelected()) {
                // If it's public, it will go here
                eventtypesel = "Public";
                eventpasscode = "";
            } else {
                // If it's private, it will go here
                eventtypesel = "Private";

                // Since the admin chose the event to be private, it checks if a passcode is entered.
                if (passcode.getText().equals("")) {
                    // It goes here if the passcode is empty
                    display.setText("Please fill in the passcode for your private event.");
                    return;
                } else {
                    eventpasscode = passcode.getText();
                }
            }
            // Adding of the event and getting the result of the adding
            String result = em.addEvent(eventname.getText(), eventorganiser.getText(), eventfees.getText(), eventdatetime.getText(), eventtypesel, eventpasscode);

            // Depending on the result, it will display different messages on the display
            if (result.equals("none")) {
                display.setText("Successfully added.");
            } else {
                display.setText(result);
            }

            // After adding the event, all the fields are resetted to blanks regardless the result of the adding of the event.
            eventdatetime.setText("");
            eventfees.setText("");
            eventname.setText("");
            eventorganiser.setText("");
            passcode.setText("");
        }
    }//GEN-LAST:event_addeventbtnActionPerformed

    private void deleteeventbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteeventbtnActionPerformed
        // Checks if only the name field in filled in
        if (eventname.getText().equals("") || !eventdatetime.getText().equals("") || !eventfees.getText().equals("") || !eventorganiser.getText().equals("")) {
            // If not, it will go here, inform the user to only fill in the name field and resets the other fields to blanks.
            display.setText("Please fill in *ONLY* the name of the event that you want to be deleted");
            eventdatetime.setText("");
            eventorganiser.setText("");
            eventfees.setText("");
        } else {
            // Deleting of the event and getting the result of the deleting
            String result = em.deleteEvent(eventname.getText());

            // Depending on the result, it will display different messages on the display
            if (result.equals("none")) {
                display.setText("Successfully deleted.");
            } else {
                display.setText(result);
            }

            // After deleting the event, the name field is resetted to blank regardless the result of the deleting of the event.
            eventname.setText("");
        }
    }//GEN-LAST:event_deleteeventbtnActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // Exiting the program and saving of files
        em.exitProgram();
    }//GEN-LAST:event_exitActionPerformed

    private void searchnamebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchnamebtnActionPerformed
        // Checks of the search name field is empty
        if (searcheventname.getText().equals("")) {
            // If it is, it will inform the user to fill it in
            display.setText("Please fill in the name of the event that you want to search.");
        } else {
            // Searching of the event and getting the result of the searching
            String result = em.searchEventname(searcheventname.getText());

            // Depending on the result, it will display different messages on the display
            if (result.equals("No Event Found.")) {
                display.setText(result);
            } else {
                display.setText(result);
            }
        }
    }//GEN-LAST:event_searchnamebtnActionPerformed

    private void searchfeesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchfeesbtnActionPerformed
        // Checks of the search fees field is empty
        if (searcheventfees.getText().equals("")) {
            // If it is, it will inform the user to fill it in
            display.setText("Please fill in the fees of the event that you want to search.");
        } else {
            // Searching of the event and getting the result of the searching
            String result = em.searchEventfees(searcheventfees.getText());

            // Depending on the result, it will display different messages on the display
            if (result.equals("No Event Found.")) {
                display.setText(result);
            } else if (result.equals("Please enter a number.")) {
                display.setText(result);
            } else {
                display.setText(result);
            }
        }
    }//GEN-LAST:event_searchfeesbtnActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // Resets all the fiels to blanks
        display.setText("");
        eventdatetime.setText("");
        eventfees.setText("");
        eventname.setText("");
        eventorganiser.setText("");
        searcheventfees.setText("");
        searcheventname.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void registereventbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registereventbtnActionPerformed
        // Checks of the search name field is empty
        if (searcheventname.getText().equals("")) {
            // If it is, it will inform the user to fill it in
            display.setText("Please fill in the name of the event that you want to register.");
        } else {
            // Registering of the event and getting the result of the registering
            String result = em.registerEvent(searcheventname.getText());

            // Depending on the result, it will display different messages on the display
            if (result.equals("This event's date you wish to register conflicts with another event you have registered before. Please enter another event.")) {
                display.setText(result);
            } else if (result.equals("No Event Found.")) {
                display.setText("Cannot find the event \"" + searcheventname.getText() + "\" !!");
            } else if (result.equals("")) {
                return;
            } else {
                display.setText(result);
                searcheventname.setText("");
            }
        }
    }//GEN-LAST:event_registereventbtnActionPerformed

    private void userrole(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userrole
        // Checks which role is selected, depending on that, it allows and disables different options
        if (user.isSelected()) {
            System.out.println("User");
            addeventbtn.setEnabled(false);
            deleteeventbtn.setEnabled(false);
            registereventbtn.setEnabled(true);
            eventname.setEditable(false);
            eventfees.setEditable(false);
            eventdatetime.setEditable(false);
            eventorganiser.setEditable(false);
            publicbtn.setEnabled(false);
            privatebtn.setEnabled(false);
            passcode.setEditable(false);
        } else {
            System.out.println("Admin");
            addeventbtn.setEnabled(true);
            deleteeventbtn.setEnabled(true);
            registereventbtn.setEnabled(false);
            eventname.setEditable(true);
            eventfees.setEditable(true);
            eventdatetime.setEditable(true);
            eventorganiser.setEditable(true);
            publicbtn.setEnabled(true);
            privatebtn.setEnabled(true);
            if (publicbtn.isSelected()) {
                passcode.setEditable(false);
            } else {
                passcode.setEditable(true);
            }
        }
    }//GEN-LAST:event_userrole

    private void eventtype(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventtype
        // Checks which type of event is chose, depending on that, the adding a passcode is disabled for public types
        if (publicbtn.isSelected()) {
            passcode.setEditable(false);
        } else {
            passcode.setEditable(true);
        }
    }//GEN-LAST:event_eventtype

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Assignment_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Assignment_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Assignment_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Assignment_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Assignment_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add_DeleteEventsPanel;
    private javax.swing.JPanel DisplayPanel;
    private javax.swing.JPanel SearchEventFeesPanel;
    private javax.swing.JPanel SearchEventNamePanel;
    private javax.swing.JPanel UserRolePanel;
    private javax.swing.JButton addeventbtn;
    private javax.swing.JRadioButton admin;
    private javax.swing.JButton deleteeventbtn;
    private javax.swing.JTextArea display;
    private javax.swing.JButton displayevents;
    private javax.swing.JTextField eventdatetime;
    private javax.swing.JTextField eventfees;
    private javax.swing.JTextField eventname;
    private javax.swing.JTextField eventorganiser;
    private javax.swing.ButtonGroup eventtype;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField passcode;
    private javax.swing.JRadioButton privatebtn;
    private javax.swing.JRadioButton publicbtn;
    private javax.swing.JButton registereventbtn;
    private javax.swing.JButton reset;
    private javax.swing.JTextField searcheventfees;
    private javax.swing.JTextField searcheventname;
    private javax.swing.JButton searchfeesbtn;
    private javax.swing.JButton searchnamebtn;
    private javax.swing.JRadioButton user;
    private javax.swing.ButtonGroup userrole;
    // End of variables declaration//GEN-END:variables
}
